
token t(33);

Con el nuevo constructor -> arbre(const T &);
   				 /* Pre: cert */
    				 /* Post: el resultat és un arbre amb un element i 					 dos subarbres buits*/


arbre<token> a (token (33));

Cuando no estaba ese constructor:

arbre<token> a (token (33), arbre<token>(), arbre<token>());

----------------------------------------------------------------------------------


¡¡¡¡CONSELL!!!! LLEGIR PREFIXA -> RECURSIVA


---------------------------------------------------------------------------------


expressions.in

PREFIXA and a or b not and T a -> INFIXA

	and										 and
       '  `										 ' `
      a   or 									        a   or
	 ' `										    ' `
	b  not			TAMBÉ ES POT POSAR EL BUIT A LA DRETA :			   b   not
	   ' `										       '  `
         buit  and									     and    buit
	       ' `									     '  `
	       T  a									     T   a

RECORREGUT inordre (INFIXA) : a and b or not T and a 	

El problema de les infixes és que depèn de si hi ha +. *, sh'a de possar parentesis, en el cas escrit faltan parentesis.
	|
	--> (a and (b or not ((T and a))))

		(posar tots el parentesis possibles)




SI ARA FOS: PREFIXA and a or b not and T a -> PREFIXA

Convertir expressió prefixa en prefixa (es queda igual) : and a or b not and T a





RECORREGUT POSTORDRE (POSTFIXA) : a b T a and not or and


------------------------------------------------------------------------------

CONSELLS PER A PROBAR:

PREFIXA 33 -> INFIXA 
PREFIXA 33 -> PREFIXA
PREFIXA 33 -> POSTFIXA









